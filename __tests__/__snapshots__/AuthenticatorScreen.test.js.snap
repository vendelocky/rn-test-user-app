// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Authenticator Component should match the snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      nativeID="animatedComponent"
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        hideShadow={false}
        largeTitleHideShadow={false}
        title="MockedScreen"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "stretch",
              "backgroundColor": "#ffffff",
              "flex": 1,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#000000",
                "fontSize": 24,
                "marginTop": 56,
              }
            }
          >
            UsersApp
          </Text>
          <View
            style={
              Array [
                null,
                Object {
                  "height": 44,
                },
              ]
            }
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderColor": "#cccccc",
                "borderRadius": 5,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginHorizontal": 48,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#cccccc",
                  "justifyContent": "center",
                  "padding": 12,
                  "width": 48,
                }
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontSize": 20,
                    },
                    undefined,
                    Object {
                      "fontFamily": "FontAwesome",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
            <TextInput
              keyboardType="email-address"
              onChangeText={[Function]}
              placeholder="Email"
              placeholderTextColor="#cccccc"
              style={
                Object {
                  "color": "#000000",
                  "flex": 1,
                  "height": 44,
                  "paddingLeft": 12,
                }
              }
            />
          </View>
          <View
            style={
              Array [
                null,
                Object {
                  "height": 24,
                },
              ]
            }
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderColor": "#cccccc",
                "borderRadius": 5,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginHorizontal": 48,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#cccccc",
                  "justifyContent": "center",
                  "padding": 12,
                  "width": 48,
                }
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontSize": 20,
                    },
                    undefined,
                    Object {
                      "fontFamily": "FontAwesome",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
            <TextInput
              onChangeText={[Function]}
              placeholder="Password"
              placeholderTextColor="#cccccc"
              secureTextEntry={true}
              style={
                Object {
                  "color": "#000000",
                  "flex": 1,
                  "height": 44,
                  "paddingLeft": 12,
                }
              }
            />
          </View>
          <View
            style={
              Array [
                null,
                Object {
                  "height": 40,
                },
              ]
            }
          />
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#4099da",
                "borderRadius": 5,
                "height": 44,
                "justifyContent": "center",
                "opacity": 1,
                "width": 156,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#ffffff",
                  "fontSize": 16,
                }
              }
            >
              Login
            </Text>
          </View>
          <View
            style={
              Array [
                null,
                Object {
                  "height": 56,
                },
              ]
            }
          />
          <View>
            <Text
              style={
                Object {
                  "color": "#000000",
                  "fontSize": 16,
                }
              }
            >
              Don't have account yet?
              <View
                style={
                  Array [
                    Object {
                      "width": 12,
                    },
                    null,
                  ]
                }
              />
              <Text
                onPress={[Function]}
                style={
                  Object {
                    "color": "#4099da",
                    "textDecorationLine": "underline",
                  }
                }
              >
                Register
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
